version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name devops-sandbox-${CIRCLE_WORKFLOW_ID} --region us-east-1
          when: on_fail
        

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum -y install tar gzip
      - run:
          name: Ensure backend infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name devops-sandbox-${CIRCLE_WORKFLOW_ID} \
              --region us-east-1
      - run:
          name: Build inventory file
          command: |
            pwd
            echo "[all]" > ~/inventory
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --region us-east-1 \
              --output text >> ~/inventory
            cat ~/inventory
      - persist_to_workspace:
            root: ~/
            paths:
              - inventory
      - destroy_environment
          
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
        # - run: yum -y install tar gzip
      - attach_workspace:
          at: ~/
      - run: cat ~/inventory
      - add_ssh_keys:
          fingerprints: ["02:dd:1d:c1:bd:35:6f:53:ce:8a:3a:7c:f9:f6:ff:84"]
      - run:
          name: "Install dependencies"
          command: |
            apk add --update curl
            apk add --update ansible
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
			ls -la
			cd aws
			ls -la
            ./aws/install         
      #- run:
      #    name: "Configure server"
      #    command: |
      #      ls -la
      #      ansible-playbook -i ~/inventory .circleci/main.yml
      - destroy_environment


workflows:
  my_workflow:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
            requires:
                - create_infrastructure    
